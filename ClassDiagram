 

@startuml 

package View {

class View {
+ {method} menu() : Int 

+ {method} choiceSensor(List<Sensor>) : Sensor 

+ {method} choicePosition() : List<Float>

+ {method} choiceMoment() : Timestamp

+ {method} printDataPrivateIndiv (List<Sensor>) : void

+ {method} printMeanCicle(Float) : void

+ {method} printExcludeIndividual (PrivateIndividual) : void

+ {method} printPoints(Int points) : void

+ {method} printQualityCloseSensor(List<Sensor>) : void

}

  
}

package Controler {

class Controler {

+ {method} askDataPrivateIndiv (PrivateIndividual individual) : List<Sensor>

+ {method} excludeIndividual (PrivateIndividual individual) : PrivateIndividual 

+ {method} meanCicleMoment (Float latitude, Float longitude, Timestamp moment) : Float

+ {method} meanCiclePeriod (Float latitude, Float longitude, Timestamp start, Timestamp stop) : Float 

+ {method} qualityCloseSensor (Sensor sensor, Timestamp start, Timestamp stop) : List<Sensor>

+ {method} getAirQuality (Float latitude, Float longitude, Timestamp moment) : Float

+ {method} askPoint () : Int

+{method} askMeanSensor (Sensor sensor) : Int

}



  
}

package Model {


class Government { 

} 


class User { 

  # login : String

  # password : String  

+ {method} getLogin() : String

+ {method} getPassword() : String

} 

class Provider { 
 
# providerId : String

+ {method} getProviderId() : String

}



class Sensor{

# sensorId : String 
 
# longitude : Float

#latitude : Float

+{method} getSensorId() : String

+{method} getLongitude() : Float

+{method} getLatitude() : Float
}

class Measurement {
 #time : Timestamp

 #value : Float 

+{method} getTime() : Timestamp

+{method} getValue() : Float
}

class Attribute {
#attributeId : String

#unit : String

#desciption : String

+{method} getAttributeId() : String

+{method} getUnit() : String

+{method} getDescription() : String

}

class Cleaner {

#cleanerId : String

#latitude : LongFloat

#longitude : Int

#timestampStart : Timestamp

#timestampStop : Timestamp


+{method} getCleanerId() : String

+{method} getLatitude() : Float

+{method} getLongititude() : Float

+{method} getTimestampStart() : Timestamp

+{method} getTimestampStop() : Timestamp
} 



class PrivateIndividual { 
#privateIndividualId : String

 #fidelityPoint : Int

#reliable : Boolean

+{method} getPrivateIndividualId() : String

+{method} getFidelityPoint() : Int

+{method} getReliable() : Boolean

} 

  

class Timestamp {
#day : String

#time : String

+{method} getDay() : String

+{method} getTime() : String
}

class DataBase{
# provider : List<Provider>

# privateIndividuals : List<Provider>

# sensors : List<Sensor> 

+{method} getProviderById(String providerId) : Provider

+{method} getProviderByIndex(Int i) : Provider

+{method} getPrivateIndividualById(String privateIndividualId) : PrivateIndividual

+{method} getPrivateIndividualByIndex(Int i) : PrivateIndividual

+{method} getSensorById(String sensorId) : Sensor

+{method} getSensorByIndex(Int i) : Sensor

+{method} creationBD () : Boolean 
}
  
}


  




  




@enduml 

  

@startuml 

User <|-- Provider : Héritage 

User <|-- Government : Héritage 

User <|-- PrivateIndividual : Héritage 

Measurement "*" --> "1" Attribute 

Measurement "*" <-- "1" Sensor 

Provider "1" --> "*" Cleaner 

PrivateIndividual "1" --> "*" Sensor 

@enduml 

